class Player {
  // late는 변수의 초기화를 미루겠다는 의미이다.
  /* 클래스에 정의된 변수를 속성(Property) 또는 필드(Field)라고 부른다.
 **/
  late String name;
  int age = 0;
  late String gender;
  // 클래스에 정의된 함수를 메소드(Method)라고 부른다.
  void hello() {
    print("Hi ~ " + name);
  }
}
void main() {
  /* 클래스의 인스턴스를 생성할 때는 다음과 같이 클래스 타입의 변수를 선언하고 클래스가
* 가진 생성자를 호출하면 된다. 생성자의 이름은 클래스 이름과 동일해야 하며 클래스를
* 정의할 때 별도로 생성자를 정의하지 않으면 기본 생성자가 자동으로 만들어진다.
 * 생성자는 클래스의 인스턴스를 생성하는 특수한 목적의 함수이다.
 * https://dart-ko.dev/language/classes
 **/
  Player p1 = Player();
  // 인스턴스의 속성(Property)와 메소드에 접근할 때 닷(.) 연산자를 사용한다.
  p1.name = "홍길동";
  p1.age = 25;
  p1.gender = "남성";
  print("${p1.name}은 ${p1.gender}이며 ${p1.age}살 임");
  /* 클래스(Class), 객체(Object), 인스턴스(Instance)
 * 클래스는 객체의 속성과 기능을 정의해 놓은 설계도이며 이 설계도를 통해서
* 여러 개의 상품을 대량 생산할 수 있는 것처럼 하나의 클래스를 정의해 놓고
* 아래와 같이 여러 개의 객체를 생성할 수 있다. 또한 클래스에 정의된 정보를 이용해
* 여러 개의 객체를 찍어 내듯이 생성할 수 있어서 클래스를 객체의 틀이라고도 한다.
 *
 * 클래스를 통해 메모리에 실제 만들어지는 하나하나의 객체를 클래스의 인스턴스(Instance)라고
* 부르며 이렇게 클래스를 통해서 객체가 만들어지는 일련에 과정을 인스턴스화(Instantiation)라고 한다.
 * 인스턴스는 클래스를 통해 실제 메모리에 실체화된 객체를 가리키는 용어이다.
 **/
  Player p2 = Player();
  print(p2);
}